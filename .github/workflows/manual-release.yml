name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0, 1.2.3)'
        required: true
        type: string
      dry_run:
        description: 'Dry run (no actual release)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  manual-release:
    name: Manual Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm clean-install

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests (if credentials available)
        env:
          AUTOTASK_USERNAME: ${{ secrets.AUTOTASK_USERNAME }}
          AUTOTASK_INTEGRATION_CODE: ${{ secrets.AUTOTASK_INTEGRATION_CODE }}
          AUTOTASK_SECRET: ${{ secrets.AUTOTASK_SECRET }}
          TEST_ACCOUNT_ID: ${{ secrets.TEST_ACCOUNT_ID }}
          TEST_CONTACT_ID: ${{ secrets.TEST_CONTACT_ID }}
          TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
        run: npm run test:integration

      - name: Build project
        run: npm run build --if-present

      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format x.y.z (e.g., 1.0.0)"
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          if git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag v${{ inputs.version }} already exists"
            exit 1
          fi

      - name: Update package.json version (Dry Run)
        if: ${{ inputs.dry_run }}
        run: |
          echo "DRY RUN: Would update package.json to version ${{ inputs.version }}"
          echo "DRY RUN: Would create and push tag v${{ inputs.version }}"

      - name: Update package.json version and create tag
        if: ${{ !inputs.dry_run }}
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ inputs.version }}"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin main
          git push origin "v${{ inputs.version }}" 