name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: Default
    
    strategy:
      matrix:
        include:
          # Minimum supported version
          - node-version: '18.x'
            os: ubuntu-latest
          # LTS version (most important)
          - node-version: '20.x'
            os: ubuntu-latest
          # Latest version
          - node-version: '22.x'
            os: ubuntu-latest
          # Test LTS version on Windows (common development environment)
          - node-version: '20.x'
            os: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify the integrity of provenance attestations and registry signatures
        run: npm audit signatures

      - name: Run linting
        run: npm run lint --if-present

      - name: Run unit tests
        run: npm run test:unit

      - name: Debug environment variables
        shell: bash
        run: |
          echo "Checking environment variables..."
          echo "AUTOTASK_USERNAME is set: $([[ -n "$AUTOTASK_USERNAME" ]] && echo "yes" || echo "no")"
          echo "AUTOTASK_INTEGRATION_CODE is set: $([[ -n "$AUTOTASK_INTEGRATION_CODE" ]] && echo "yes" || echo "no")"
          echo "AUTOTASK_SECRET is set: $([[ -n "$AUTOTASK_SECRET" ]] && echo "yes" || echo "no")"
          echo "Username starts with: ${AUTOTASK_USERNAME:0:10}..."
        env:
          AUTOTASK_USERNAME: ${{ secrets.AUTOTASK_USERNAME }}
          AUTOTASK_INTEGRATION_CODE: ${{ secrets.AUTOTASK_INTEGRATION_CODE }}
          AUTOTASK_SECRET: ${{ secrets.AUTOTASK_SECRET }}

      - name: Run integration tests
        env:
          AUTOTASK_USERNAME: ${{ secrets.AUTOTASK_USERNAME }}
          AUTOTASK_INTEGRATION_CODE: ${{ secrets.AUTOTASK_INTEGRATION_CODE }}
          AUTOTASK_SECRET: ${{ secrets.AUTOTASK_SECRET }}
          TEST_ACCOUNT_ID: ${{ secrets.TEST_ACCOUNT_ID }}
          TEST_CONTACT_ID: ${{ secrets.TEST_CONTACT_ID }}
          TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
        run: npm run test:integration

      - name: Build project
        run: npm run build --if-present

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    environment: Default
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage --if-present || npm run test:unit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false 